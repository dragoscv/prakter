{
  "name": "prakter",
  "displayName": "prakter",
  "description": "Easily manage the tasks of the project",
  "version": "0.0.2",
  "publisher": "dragoscv",
  "license": "MIT",
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onView:prakter.readmePreview",
    "onView:prakter.changelogView",
    "onView:prakter.todoView",
    "onCommand:prakter.createFiles",
    "onCommand:prakter.createFilesWithCopilot",
    "onCommand:prakter.addTodoItem",
    "onCommand:prakter.addChangelogItem",
    "onCommand:prakter.refreshView"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/dragoscv/prakter"
  },
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "prakter-sidebar",
          "title": "Prakter",
          "icon": "media/icon.svg"
        }
      ]
    },
    "views": {
      "prakter-sidebar": [
        {
          "id": "prakter.todoView",
          "name": "TODO",
          "when": "workbenchState != empty"
        },
        {
          "id": "prakter.changelogView",
          "name": "CHANGELOG",
          "when": "workbenchState != empty"
        },
        {
          "type": "webview",
          "id": "prakter.readmePreview",
          "name": "README",
          "when": "workbenchState != empty"
        },
        {
          "type": "webview",
          "id": "prakter.welcomeView",
          "name": "Welcome",
          "when": "workbenchState == empty"
        }
      ]
    },
    "commands": [
      {
        "command": "prakter.createFiles",
        "title": "Create Project Files",
        "category": "Prakter"
      },
      {
        "command": "prakter.createFilesWithCopilot",
        "title": "Create Project Files with Copilot",
        "category": "Prakter"
      },
      {
        "command": "prakter.addTodoItem",
        "title": "Add TODO Item",
        "category": "Prakter"
      },
      {
        "command": "prakter.addChangelogItem",
        "title": "Add Changelog Item",
        "category": "Prakter"
      },
      {
        "command": "prakter.refreshView",
        "title": "Refresh View",
        "category": "Prakter",
        "icon": "$(refresh)"
      },
      {
        "command": "prakter.createTaskInCategory",
        "title": "Create Task",
        "category": "Prakter"
      },
      {
        "command": "prakter.deleteTask",
        "title": "Delete Task",
        "category": "Prakter"
      },
      {
        "command": "prakter.renameTask",
        "title": "Rename Task",
        "category": "Prakter"
      },
      {
        "command": "prakter.viewTaskDetails",
        "title": "View Task Details",
        "category": "Prakter"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "prakter.createTaskInCategory",
          "when": "view == prakter.todoView && viewItem == category",
          "group": "inline"
        },
        {
          "command": "prakter.deleteTask",
          "when": "view == prakter.todoView && viewItem == todo",
          "group": "1_modification"
        },
        {
          "command": "prakter.renameTask",
          "when": "view == prakter.todoView && viewItem == todo",
          "group": "1_modification"
        }
      ]
    },
    "configuration": {
      "title": "Prakter",
      "properties": {
        "prakter.todoCategories": {
          "type": "array",
          "default": [
            "Very Highly Urgent",
            "Highly Important",
            "Medium Necessarily",
            "Low Priority",
            "Futures",
            "Ideas"
          ],
          "description": "Categories for TODO items"
        },
        "prakter.syncSettings": {
          "type": "boolean",
          "default": true,
          "description": "Sync settings with VS Code Settings Sync"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "node --force-node-api-uncaught-exceptions-policy=true ./out/test/runTest.js",
    "mocha": "mocha -r ts-node/register \"src/test/**/*.test.ts\""
  },
  "devDependencies": {
    "@types/marked": "^4.3.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.25.0",
    "eslint": "^9.21.0",
    "lru-cache": "^7.18.3",
    "marked": "^4.3.0",
    "mocha": "^10.3.0",
    "npm-run-all": "^4.1.5",
    "sinon": "^19.0.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3"
  },
  "type": "commonjs"
}